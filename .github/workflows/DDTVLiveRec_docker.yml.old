# mcr.microsoft.com/dotnet/aspnet镜像已支持arm32v7 Alpine系统，故备份本文件
# 该配置文件用于支持多系统镜像

name: DDTVLiveRec_docker
#若合并至源项目，以下要改：

#删去：
#  watch:
#    types: [started]
#  push:
#    branches: [master]

on:
  release:
    types: [released]
  watch:
    types: [started]
  push:
    branches: [master]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          IMAGE=ddtvliverec
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE}"
          VERSION=$(curl -sX GET "https://api.github.com/repos/CHKZL/DDTV2/releases/latest" | awk '/tag_name/{print $4;exit}' FS='["]')
          TAG_VERSION="${IMAGE_NAME}:${VERSION}"
          TAG_LATEST="${IMAGE_NAME}:latest"
          echo ::set-output name=image_name::${IMAGE_NAME}
          echo ::set-output name=build_args::${VERSION}
          echo ::set-output name=tag_version::${TAG_VERSION}
          echo ::set-output name=tag_latest::${TAG_LATEST}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

#构建各架构镜像
      - name: Build and push linux/arm/v7
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.debian
          platforms: linux/arm/v7
          push: true
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tag_version }}-arm32v7,${{ steps.prepare.outputs.tag_latest }}-arm32v7

      - name: Build and push linux/arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/arm64
          push: true
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tag_version }}-arm64v8,${{ steps.prepare.outputs.tag_latest }}-arm64v8

      - name: Build and push linux/amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          push: true
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tag_version }}-amd64,${{ steps.prepare.outputs.tag_latest }}-amd64

#创建并推送多架构镜像
      - name: Create and push manifest lists
        run: |
          docker manifest create -a ${{ steps.prepare.outputs.tag_version }} \
              ${{ steps.prepare.outputs.tag_version }}-amd64 \
              ${{ steps.prepare.outputs.tag_version }}-arm64v8 \
              ${{ steps.prepare.outputs.tag_version }}-arm32v7
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_version }} \
              ${{ steps.prepare.outputs.tag_version }}-amd64 \
              --arch=amd64 \
              --os=linux  \
              --os-version=aspnet:5.0-alpine
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_version }} \
              ${{ steps.prepare.outputs.tag_version }}-arm64v8 \
              --arch=arm64 \
              --os=linux  \
              --variant=v8 \
              --os-version=aspnet:5.0-alpine
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_version }} \
              ${{ steps.prepare.outputs.tag_version }}-arm32v7 \
              --arch=arm \
              --os=linux  \
              --variant=v7 \
              --os-version=aspnet:5.0-debian
          
          docker manifest push ${{ steps.prepare.outputs.tag_version }}
          
          docker manifest create -a ${{ steps.prepare.outputs.tag_latest }} \
              ${{ steps.prepare.outputs.tag_latest }}-amd64 \
              ${{ steps.prepare.outputs.tag_latest }}-arm64v8 \
              ${{ steps.prepare.outputs.tag_latest }}-arm32v7
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_latest }} \
              ${{ steps.prepare.outputs.tag_latest }}-amd64 \
              --arch=amd64 \
              --os=linux  \
              --os-version=aspnet:5.0-alpine
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_latest }} \
              ${{ steps.prepare.outputs.tag_latest }}-arm64v8 \
              --arch=arm64 \
              --os=linux  \
              --variant=v8 \
              --os-version=aspnet:5.0-alpine
          
          docker manifest annotate ${{ steps.prepare.outputs.tag_latest }} \
              ${{ steps.prepare.outputs.tag_latest }}-arm32v7 \
              --arch=arm \
              --os=linux  \
              --variant=v7 \
              --os-version=aspnet:5.0-debian
          
          docker manifest push ${{ steps.prepare.outputs.tag_latest }}
