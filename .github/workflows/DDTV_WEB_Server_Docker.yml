name: DDTV_WEB_Server_Docker
# 合并删去 debian DockerHub
#  watch:
#    types: [started]
#          echo ::set-output name=ddtv_version::${Version}
#            ${{ secrets.DOCKERHUB_USERNAME }}/ddtv
#            ghcr.io/${{ github.actor }}/ddtv --> ghcr.io/${{ github.repository }}
#            type=raw,value=${{ steps.prepare.outputs.ddtv_version }}

on:
  release:
    types: [released]
  watch:
    types: [started]
  push:
    branches: [master]
    paths:
      - 'DDTV_WEB_Server/**'
      - 'DDTV_WEB_Views/**'
      - 'Docker/**'
      - '!Docker/README.md'
      - '.github/workflows/DDTV_WEB_Server_Docker.yml'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Prepare # 输出
        id: prepare
        run: |
          Version=$(curl -sX GET "https://api.github.com/repos/CHKZL/DDTV/releases/latest" | awk '/tag_name/{print $4;exit}' FS='["]')
          Version_major=${Version%%.*} && Version_major=${Version_major:0-1}
          Version_minor=${Version#*.}  && Version_minor=${Version_minor:0:1}
          echo ::set-output name=ddtv_version::${Version}
          echo ::set-output name=ddtv_version_major::${Version_major}.${Version_minor}
          cd Docker/ && chmod +x $(find . -name "*.sh")  && ./prepare.sh ${{ secrets.WEBUI_URL }}

      - name: Metadata for alpine images
        id: alpine
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ddtv
            ghcr.io/${{ github.actor }}/ddtv
            registry.cn-shenzhen.aliyuncs.com/${{ github.actor }}/ddtv
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.prepare.outputs.ddtv_version }}
            type=raw,value=${{ steps.prepare.outputs.ddtv_version_major }}

      - name: Metadata for debian images
        id: debian
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ddtv
            ghcr.io/${{ github.actor }}/ddtv
            registry.cn-shenzhen.aliyuncs.com/${{ github.actor }}/ddtv
          flavor: |
            latest=true
            suffix=-debian,onlatest=true
          tags: |
            type=raw,value=${{ steps.prepare.outputs.ddtv_version }}
            type=raw,value=${{ steps.prepare.outputs.ddtv_version_major }}

      - name: Metadata for nginx images
        id: nginx
        uses: docker/metadata-action@v3
        with:
            #registry.cn-shenzhen.aliyuncs.com/${{ github.actor }}/ddtvwebui
            #${{ secrets.DOCKERHUB_USERNAME }}/ddtvwebui
          images: |
            ghcr.io/${{ github.actor }}/ddtvwebui
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.prepare.outputs.ddtv_version }}
            type=raw,value=${{ steps.prepare.outputs.ddtv_version_major }}


# 登录至仓库
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to ACR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: registry.cn-shenzhen.aliyuncs.com
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

# 构建各架构镜像
      - name: Build and push debian os
        uses: docker/build-push-action@v2
        with:
          context: Docker/
          file: Docker/Dockerfile.debian
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.debian.outputs.tags }}
          labels: ${{ steps.debian.outputs.labels }}

      - name: Build and push alpine os
        uses: docker/build-push-action@v2
        with:
          context: Docker/
          file: Docker/Dockerfile.alpine
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.alpine.outputs.tags }}
          labels: ${{ steps.alpine.outputs.labels }}

      - name: Build and push nginx os
        uses: docker/build-push-action@v2
        with:
          context: Docker/
          file: Docker/Dockerfile.nginx
          platforms: linux/amd64, linux/arm64, linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.nginx.outputs.tags }}
          labels: ${{ steps.nginx.outputs.labels }}
