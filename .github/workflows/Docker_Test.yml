name: DDTV_Test

on:
  workflow_dispatch:
  push:
    branches: 
      - test

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: test
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Prepare
        id: prepare
        run: |
          echo ::set-output name=ddtv_version::$(curl -sX GET "https://api.github.com/repos/CHKZL/DDTV/releases/latest" | awk '/tag_name/{print $4;exit}' FS='["]')
          chmod +x prepare.sh && ./prepare.sh

      - name: Extract Docker metadata for test images
        id: test
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ddtvliverec
          flavor: |
            latest=false
          tags: |
            type=raw,value=test
            type=match,pattern=(\d.\d),group=1
            type=match,pattern=v(\d.\d),group=1
            type=match,pattern=V(\d.\d),group=1
            type=match,pattern=Ver(\d.\d),group=1
            type=match,pattern=VER(\d.\d),group=1

# 登录至仓库
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

# 构建各架构镜像
      - name: Build and push test os
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.test
          platforms: linux/amd64 #, linux/arm64, linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.test.outputs.tags }}
          labels: ${{ steps.test.outputs.labels }}
