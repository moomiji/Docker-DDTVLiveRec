name: Docker_Build_Push

on:
  workflow_call:
    inputs:
      context:
        required: true
        type: string
      os_id:
        required: true
        type: string
      images:
        required: true
        type: string
      platforms:
        required: true
        type: string
      verall:
        type: string
      vertwo:
        type: string
      build-args:
        type: string

jobs:
  Build_and_push:
    runs-on: ubuntu-latest
    steps:
      - run: ${{ inputs.os_id == 'debian' }} || echo "os_id=-${{ inputs.os_id }}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

# ./prepare.sh
# $1: $*_PROJECT in DDTV_Docker_Release.yml#L16
# $2: -alpine 或 -focal 等 docker-dotnet 标签系统后缀
      - name: Prepare
        run: |
          cd "$(shopt -s globstar nullglob && chmod -v +x Docker/**/*.sh | awk '/prepare.sh/{print $2}' FS="'|prepare.sh")"
          ./prepare.sh "${{ inputs.context }}" "${{ env.os_id }}"

      - name: Metadata for images
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ inputs.images }}
          flavor: |
                  latest=true
                  suffix=${{ env.os_id }},onlatest=true
          tags:   |
                  ${{ inputs.verall }}
                  ${{ inputs.vertwo }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ inputs.context }}/
          file:    ${{ inputs.context }}/Dockerfile
          push:    true
          tags:    ${{ steps.metadata.outputs.tags }}
          labels:  ${{ steps.metadata.outputs.labels }}
          platforms:  ${{ inputs.platforms }}
          build-args: ${{ inputs.build-args }}
